[ {"url": "index.html", "title": "fiddles" , "desc": "Short exercises in programming" , "type": "website" , "tags": ["orderBy", "directives", "constant",  "isolate scope & = @"]},
{"url": "ajax-callback/index.html", "title": "async - ajax callback" , "desc": "async via callback - On using a service to handle ajax and respond with a callback" , "type": "website" , "tags": ["ajax", "callback",  "onclick", "getElementById" ]},
{"url": "blank/index.html", "title": "blank" , "desc": "blank content" , "type": "junk" , "tags": ["directives" ]},
{"url": "datastruc/index.html", "title": "datastrucs" , "desc": "data structures: linked lists and binary trees" , "type": "website" , "tags": ["linked lists", "binary tree", "prototype", "tree traversal", "inorder" ]},
{"url": "interviewq/index.html", "title": "findLastDup" , "desc": "find last duplicate of sorted array using divide and conquer" , "type": "website" , "tags": ["arrays", "divide and conquer", "big(O)", "apply"]},
{"url": "interviewqs/index.html", "title": "interview" , "desc": "find dupes in array" , "type": "website" , "tags": ["arrays", "hasOwnProperty", "hash table", "associative array", "palindrome"]},
{"url": "mw/index.html", "title": "blank" , "desc": "blank content" , "type": "junk" , "tags": ["directives" ]},
{"url": "quiz/index.html", "title": "quiz" , "desc": "blank content" , "type": "junk" , "tags": ["directives" ]},
{"url": "revstr/index.html", "title": "revstr" , "desc": "reverse string recuresively, a)from front, b)split" , "type": "website" , "tags": ["recursion" , "strings", "slice"]},
{"url": "sorts/index.html", "title": "sorts" , "desc": "blank content" , "type": "website" , "tags": ["directives" ]},
{"url": "css/blank/index.html", "title": "css" , "desc": "blank mobile-first responsive css" , "type": "website" , "tags": ["float", "@media", "min_width", "css3"]},
{"url": "css/button/index.html", "title": "css button" , "desc": "css custom button" , "type": "website" , "tags": ["float", "@media", "min_width", "css3"]},
{"url": "css/less/index.html", "title": "less button" , "desc": "less custom button" , "type": "website" , "tags": ["float", "@media", "min_width", "css3"]},
{"url": "es6/promises/index.html", "title": "async - promises" , "desc": "async via promises - compared to ajax callback" , "type": "website" , "tags": ["promises", "ajax", "callback",  "onclick", "getElementById" ]},
{"url": "js/apply-call-bind/index.html", "title": "js-apply-call-bind" , "desc": "advanced javascript - apply call bind and currying functions" , "type": "website" , "tags": ["apply", "call", "bind", "currying", "reduce" ]},
{"url": "js/blank/index.html", "title": "js-blank" , "desc": "" , "type": "junk" , "tags": ["oredrBy", "directives" ]},
{"url": "js/closure/index.html", "title": "js-closure" , "desc": "Understanding Closure (+async closure)" , "type": "website" , "tags": ["closure", "document.querySelectorAll", "promises", "IIFE", "module","pattern"]},
{"url": "js/js-math/index.html", "title": "js-math" , "desc": "js-math" , "type": "website" , "tags": ["math" ]},
{"url": "js/maxarray/index.html", "title": "js-max array" , "desc": "exercise: find max in array" , "type": "website" , "tags": ["document.getElement", "apply", "slice"]},
{"url": "js/observer/index.html", "title": "js-observer pattern" , "desc": "Implement observer pattern with array of callback functions, registerObservers and notifyObservers" , "type": "website" , "tags": ["array.forEach", "forEach", "observer", "callback", "notify", "$watch"]},
{"url": "js/oo/index.html", "title": "oo" , "desc": "blank content" , "type": "junk" , "tags": ["directives" ]},
{"url": "js/prototype/index.html", "title": "js-prototype" , "desc": "advanced javascript - prototype" , "type": "website" , "tags": ["prototype", "borrowing methods", "apply"]},
{"url": "ko/add-row/index.html", "title": "ko-add new array" , "desc": "ko add to array - create a table with editable cells that updates a total and computes a json representation as a computed observable" , "type": "website" , "tags": ["ko", "ko.observableArray", "ko.utils.arrayForEach", "ko.mapping.fromJS", "ko.computed", "ko.editable-table"]},
{"url": "ko/disp-change/index.html", "title": "ko-array updatable" , "desc": "ko dynamic array - create a table with editable cells that updates a total and computes a json representation as a computed observable" , "type": "website" , "tags": ["ko", "ko.observableArray", "ko.utils.arrayForEach", "ko.mapping.fromJS", "ko.computed", "ko.editable-table"]},
{"url": "ko/editable-table/index.html", "title": "ko challengeko-editable-table" , "desc": "ko dynamic array - create a table with editable cells that updates a total and computes a json representation as a computed observable" , "type": "website" , "tags": ["ko", "ko.observableArray", "ko.utils.arrayForEach", "ko.mapping.fromJS", "ko.computed", "ko.editable-table"]},
{"url": "ko/table/index.html", "title": "ko-array updatable" , "desc": "ko- dynamic array Why cant I use a simple values array as an observable in knockout?" , "type": "junk" , "tags": ["ko", "ko.observableArray", "ko.utils.arrayForEach", "ko.mapping.fromJS", "ko.computed"]},
{"url": "ng/blank/index.html", "title": "ng-blank" , "desc": "blank, two way data binding in controller and directive" , "type": "website" , "tags": ["two way", "databinding", "two way databinding", "directive", "controller", "angular"]},
{"url": "ng/broadcast/index.html", "title": "ng-online" , "desc": "Checking online status in AngularJS app" , "type": "website" , "tags": ["$broadcast", "interceptors", "$watch", "$interval", "$window.onfocus", "polling", "$rootScope"]},
{"url": "ng/dirWatch/index.html", "title": "ng-blank" , "desc": "blank description" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/focus/index.html", "title": "ng-focus" , "desc": "Detecting window onfocus and blur in angularJS" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/functions/index.html", "title": "ng-blank" , "desc": "" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/markdown/index.html", "title": "ng-markdown" , "desc": "markdown directive as element attribute" , "type": "website" , "tags": ["markdown", "showdown"]},
{"url": "ng/mergePCS/index.html", "title": "s2g-sync" , "desc": "Sync client and server" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/mergePCSlive/index.html", "title": "s2g-sync" , "desc": "Snch client and server" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/mobl-list/index.html", "title": "ng-mobl-list" , "desc": "Angular Find 1st Dup" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/modList/index.html", "title": "ng-module" , "desc": "blank description" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/modList-1/index.html", "title": "ng-module" , "desc": "blank description" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/moduleBl/index.html", "title": "ng-module" , "desc": "blank description" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/ng-&/index.html", "title": "ng-&" , "desc": "isolate scope &, reference function in parent" , "type": "website" , "tags": ["&", "reference", "parent", "directive", "controller", "angular", "link"]},
{"url": "ng/ng1stRepeat/index.html", "title": "ng-blank" , "desc": "Angular Find 1st Dup" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/ngSelectDefault/index.html", "title": "ng-select: default" , "desc": "Setting default select value in AngularJS" , "type": "website" , "tags": ["oredrBy", "directives" ]},
{"url": "ng/online/index.html", "title": "ng-online" , "desc": "Checking online status in AngularJS app" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/order-by/index.html", "title": "order-by" , "desc": "Angular Find 1st Dup" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/promise/index.html", "title": "promises-ng" , "desc": "Promises between service and controller in AngularJS" , "type": "website" , "tags": ["promises", "$http", "callback", "ng", "then" ]},
{"url": "ng/radio/index.html", "title": "ng-radio" , "desc": "radio control using 2-way databinding; on incoming ng-value, radio changes, on radio selection incoming ng-value is altered" , "type": "website" , "tags": ["two way", "databinding", "two way databinding", "radio", "ng-repeat", "ng-model", "ng-value"]},
{"url": "ng/radio2/index.html", "title": "ng-radio" , "desc": "radio control using 2-way databinding; on incoming ng-value, radio changes, on radio selection incoming ng-value is altered" , "type": "website" , "tags": ["two way", "databinding", "two way databinding", "radio", "ng-repeat", "ng-model", "ng-value"]},
{"url": "ng/route/index.html", "title": "ng-1233-route" , "desc": "a failed exploration of websockets" , "type": "junk" , "tags": "undefined"},
{"url": "ng/route2/index.html", "title": "ng-1233-route2" , "desc": "a 2nd failed exploration of web sockets" , "type": "junk" , "tags": "undefined"},
{"url": "ng/route44/index.html", "title": "ng websockets 1244-route" , "desc": "Failed attempt at websockets, using socket io" , "type": "junk" , "tags": ["web sockets"]},
{"url": "ng/s2g/index.html", "title": "ng-module" , "desc": "blank description" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/s2g-1/index.html", "title": "ng-module" , "desc": "blank description" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/select/index.html", "title": "ng-select" , "desc": "Setting default select value in AngularJS" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/select+dropdown/index.html", "title": "ng-select+dropdown" , "desc": "ng select and dropdown components" , "type": "website" , "tags": ["isoloate scope & = @", "directives", "ngOptions", "select", "dropdown", "split" ]},
{"url": "ng/shareBetwCtrl/index.html", "title": "ng-share" , "desc": "share between controllers" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/shareUsingDirectives/index.html", "title": "ng-share" , "desc": "share between controllers" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/watch/index.html", "title": "ng-blank" , "desc": "blank description" , "type": "undefined" , "tags": "undefined"},
{"url": "py/sse8001pi/index.html", "title": "notitle" , "desc": "undefined" , "type": "undefined" , "tags": "undefined"},
{"url": "py/sse8088cascada2/index.html", "title": "notitle" , "desc": "undefined" , "type": "undefined" , "tags": "undefined"},
{"url": "react/blank/index.html", "title": "blank" , "desc": "blank content" , "type": "junk" , "tags": ["directives" ]},
{"url": "react/checklink/index.html", "title": "jsx...props" , "desc": "react ...props" , "type": "website" , "tags": ["react","...this.props"]},
{"url": "react/comm-betw-cmpnts/index.html", "title": "jsx-comm betw cmpnt" , "desc": "React - Communicating between components" , "type": "website" , "tags": ["react", "bind", "refs", "this" ]},
{"url": "react/es6count/index.html", "title": "jsx es6 count" , "desc": "react es6 count" , "type": "website" , "tags": ["es6", "react", "constructor", "propTypes", "defaultProps"]},
{"url": "react/es6hello/index.html", "title": "jsx es6 hello" , "desc": "react es6 blank" , "type": "website" , "tags": ["es6", "react"]},
{"url": "react/es6spread/index.html", "title": "jsx es6 hello" , "desc": "react es6 blank" , "type": "website" , "tags": ["es6", "react"]},
{"url": "react/expose-cmpnt-funcs/index.html", "title": "jsx-expose cmpnt funcs" , "desc": "React - Expose Component Functions" , "type": "website" , "tags": ["react", "bind", "refs", "this" ]},
{"url": "react/mixin/index.html", "title": "jsx mixins" , "desc": "react mixins" , "type": "website" , "tags": ["mixins", "react"]},
{"url": "ng/broadcast/v2/index.html", "title": "ng-online" , "desc": "Checking online status in AngularJS app" , "type": "undefined" , "tags": "undefined"},
{"url": "ng/online/v2/index.html", "title": "ng-online" , "desc": "Checking online status in AngularJS app" , "type": "undefined" , "tags": "undefined"} ]